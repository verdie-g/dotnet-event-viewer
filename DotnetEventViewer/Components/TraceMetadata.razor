@using DotnetEventViewer.State

@inject StateContainer State

@if (State.Trace == null || State.TraceExtraMetadata == null)
{
    return;
}

<FluentButton Id="trace-metadata" @onclick="() => _visible = !_visible">
    <FluentIcon Value="@(new Icons.Regular.Size24.Info())" Title="Trace Metadata" />
</FluentButton>

<FluentPopover Style="width: 300px;background-color: var(--accent-fill-rest)" AnchorId="trace-metadata" @bind-Open="_visible">
    <Header>@(State.TraceExtraMetadata.Filename)</Header>
    <Body>
        <ul>
            <li>Date: @(State.Trace.Metadata.Date.ToString("yyyy/MM/dd hh:mm"))</li>
            <li>Duration: @Duration</li>
            <li>CPUs: @(State.Trace.Metadata.NumberOfProcessors)</li>
            <li>OS: @(State.TraceExtraMetadata.OsFamily) @(State.Trace.Metadata.PointerSize == 8 ? "x64" : "x32")</li>
            <li>Command Line: @(State.TraceExtraMetadata.CommandLine)</li>
            <li>.NET Version: @(State.TraceExtraMetadata.RuntimeVersion)</li>
        </ul>
    </Body>
</FluentPopover>

@code {
    private bool _visible;

    private string Duration
    {
        get
        {
            var duration = State.TraceExtraMetadata!.Duration;
            if (duration < TimeSpan.FromMinutes(1))
            {
                return $"{(int)duration.TotalSeconds} s";
            }

            return $"{(int)duration.TotalMinutes} min {duration.Seconds} s";
        }
    }
}