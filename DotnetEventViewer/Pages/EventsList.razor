@page "/list"

@using DotnetEventViewer.State
@using EventPipe
@using DotnetEventViewer.Components
@using DotnetEventViewer.Querying

<PageTitle>Events List</PageTitle>

<h1>Events List</h1>

<FluentStack Orientation="Orientation.Horizontal">
    <div>
    </div>
</FluentStack>

<QueryBuilder QueryType="QueryType.List" OnQuery="OnQuery" />

@if (_events != null)
{
    <FluentDataGrid
        Items="@_events"
        ItemKey="@(e => e.Index)"
        Virtualize="true"
        ResizableColumns="true"
        ItemSize="32">
        <ChildContent>
            @foreach (var f in _columnFields!)
            {
                <PropertyColumn Title="@f.Name" Property="@(e => f.Selector(e))" Sortable="true"/>
            }
        </ChildContent>
        <EmptyContent>
            No events.
        </EmptyContent>
    </FluentDataGrid>
}

@code {
    private IQueryable<Event>? _events;
    private IEnumerable<Field>? _columnFields;

    private void OnQuery(QueryResult queryResult)
    {
        _events = queryResult.FilteredEvents.AsQueryable();
        _columnFields = queryResult.ColumnFields;
    }
}